#include <iostream>
using namespace std;


struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};


TreeNode* searchBST(TreeNode* root, int val) {
    if (root == nullptr || root->val == val)
        return root;  // Found or reached end

    if (val < root->val)
        return searchBST(root->left, val);  
    else
        return searchBST(root->right, val); 
}

void inorder(TreeNode* root) {
    if (!root) return;
    inorder(root->left);
    cout << root->val << " ";
    inorder(root->right);
}

int main() {
 
    TreeNode* root = new TreeNode(4);
    root->left = new TreeNode(2);
    root->right = new TreeNode(7);
    root->left->left = new TreeNode(1);
    root->left->right = new TreeNode(3);

    int val = 2;
    TreeNode* result = searchBST(root, val);

    if (result) {
        cout << "Subtree rooted at " << val << ": ";
        inorder(result);
        cout << endl;
    } else {
        cout << "Value not found in BST" << endl;
    }

    return 0;
}
